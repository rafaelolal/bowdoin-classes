comment	// hello how are youd
type	int
main	main
(	(
)	)
{	{
type	bool
id	a
;	;
type	char
id	b
;	;
type	int
id	c
;	;
type	float
id	d
;	;
type	bool
id	e
,	,
id	f
,	,
id	g
,	,
id	h
,	,
id	i
,	,
id	j
,	,
id	k
;	;
id	a
assignOp	=
boolLiteral	true
;	;
id	b
assignOp	=
charLiteral	'a'
;	;
id	c
assignOp	=
intLiteral	10
;	;
id	d
assignOp	=
floatLiteral	10.5
;	;
id	e
assignOp	=
boolLiteral	true
;	;
id	f
assignOp	=
boolLiteral	false
;	;
comment	// yessir
if	if
(	(
id	a
addOp	+
id	b
multOp	/
id	c
multOp	*
id	d
)	)
{	{
if	if
(	(
id	e
)	)
{	{
if	if
(	(
id	f
)	)
{	{
if	if
(	(
id	g
)	)
{	{
if	if
(	(
id	h
)	)
{	{
if	if
(	(
id	i
)	)
{	{
if	if
(	(
id	j
)	)
{	{
if	if
(	(
id	k
)	)
{	{
id	a
assignOp	=
boolLiteral	false
;	;
}	}
}	}
if	if
(	(
id	k
)	)
{	{
id	a
assignOp	=
boolLiteral	false
;	;
}	}
else	else
{	{
id	a
assignOp	=
boolLiteral	true
;	;
}	}
}	}
}	}
}	}
else	else
{	{
id	a
assignOp	=
boolLiteral	false
;	;
}	}
}	}
else	else
{	{
id	a
assignOp	=
boolLiteral	true
;	;
}	}
}	}
}	}
if	if
(	(
id	a
)	)
{	{
id	b
assignOp	=
charLiteral	'b'
;	;
}	}
else	else
{	{
id	c
assignOp	=
intLiteral	20
;	;
}	}
if	if
(	(
id	a
)	)
{	{
id	b
assignOp	=
charLiteral	'b'
;	;
}	}
if	if
(	(
id	a
)	)
{	{
id	b
assignOp	=
charLiteral	'b'
;	;
}	}
else	else
{	{
id	c
assignOp	=
intLiteral	20
;	;
}	}
if	if
(	(
id	a
relOp	<=
id	b
&&	&&
id	c
relOp	>=
id	d
)	)
{	{
id	a
assignOp	=
boolLiteral	true
;	;
}	}
else	else
{	{
id	a
assignOp	=
boolLiteral	false
;	;
}	}
comment	// comment there
if	if
(	(
id	a
equOp	==
id	b
||	||
id	c
equOp	!=
id	d
)	)
{	{
comment	// hello there
id	a
assignOp	=
boolLiteral	true
;	;
}	}
else	else
{	{
id	a
assignOp	=
boolLiteral	false
;	;
}	}
comment	// comment here
while	while
(	(
intLiteral	5
addOp	+
intLiteral	1
addOp	-
intLiteral	3
multOp	/
intLiteral	13
multOp	*
intLiteral	2
equOp	==
id	d
)	)
{	{
id	a
assignOp	=
boolLiteral	true
;	;
}	}
if	if
(	(
id	a
&&	&&
id	b
||	||
id	c
equOp	==
id	d
addOp	+
intLiteral	3
addOp	-
intLiteral	1
&&	&&
id	d
)	)
{	{
id	a
assignOp	=
boolLiteral	true
;	;
}	}
else	else
{	{
id	a
assignOp	=
boolLiteral	false
;	;
}	}
print	print
id	a
;	;
return	return
id	b
;	;
}	}
